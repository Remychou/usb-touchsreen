C51 COMPILER V9.52.0.0   DEBUG                                                             10/14/2017 10:14:20 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE DEBUG
OBJECT MODULE PLACED IN Debug.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Debug.C LARGE OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /********************************** (C) COPYRIGHT *******************************
   2          * File Name          : Debug.C
   3          * Author             : WCH
   4          * Version            : V1.0
   5          * Date               : 2017/01/20
   6          * Description        : CH554 DEBUG Interface
   7                               CH554Ö÷ÆµÐÞ¸Ä¡¢ÑÓÊ±º¯Êý¶¨Òå
   8                               ´®¿Ú0ºÍ´®¿Ú1³õÊ¼»¯
   9                               ´®¿Ú0ºÍ´®¿Ú1µÄÊÕ·¢×Óº¯Êý
  10                               ¿´ÃÅ¹·³õÊ¼»¯                                                                                
  11          *******************************************************************************/
  12          
  13          #include "CH554.H"
  14          #include "Debug.H"
  15          
  16          UINT8   TH_L,TH_H;
  17          
  18          /*******************************************************************************
  19          * Function Name  : CfgFsys( )
  20          * Description    : CH554Ê±ÖÓÑ¡ÔñºÍÅäÖÃº¯Êý,Ä¬ÈÏÊ¹ÓÃFsys 6MHz£¬FREQ_SYS¿ÉÒÔÍ¨¹ý
  21                             CLOCK_CFGÅäÖÃµÃµ½£¬¹«Ê½ÈçÏÂ£º
  22                             Fsys = (Fosc * 4/(CLOCK_CFG & MASK_SYS_CK_SEL);¾ßÌåÊ±ÖÓÐèÒª×Ô¼ºÅäÖÃ 
  23          * Input          : None
  24          * Output         : None
  25          * Return         : None
  26          *******************************************************************************/ 
  27          void    CfgFsys( )  
  28          {
  29   1      //              SAFE_MOD = 0x55;
  30   1      //              SAFE_MOD = 0xAA;
  31   1      //     CLOCK_CFG |= bOSC_EN_XT;                          //Ê¹ÄÜÍâ²¿¾§Õñ
  32   1      //     CLOCK_CFG &= ~bOSC_EN_INT;                        //¹Ø±ÕÄÚ²¿¾§Õñ    
  33   1                      SAFE_MOD = 0x55;
  34   1                      SAFE_MOD = 0xAA;
  35   1      //              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x07;  // 32MHz     
  36   1      //              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x06;  // 24MHz     
  37   1                      CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x05;  // 16MHz     
  38   1      //              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x04;  // 12MHz
  39   1      //              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x03;  // 6MHz      
  40   1      //              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x02;  // 3MHz      
  41   1      //              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x01;  // 750KHz    
  42   1      //              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x00;  // 187.5MHz          
  43   1                      SAFE_MOD = 0x00;
  44   1      }
  45          
  46          /*******************************************************************************
  47          * Function Name  : mDelayus(UNIT16 n)
  48          * Description    : usÑÓÊ±º¯Êý
  49          * Input          : UNIT16 n
  50          * Output         : None
  51          * Return         : None
  52          *******************************************************************************/ 
  53          void    mDelayuS( UINT16 n )  // ÒÔuSÎªµ¥Î»ÑÓÊ±
  54          {
  55   1      #ifdef  FREQ_SYS
C51 COMPILER V9.52.0.0   DEBUG                                                             10/14/2017 10:14:20 PAGE 2   

  56   1      #if             FREQ_SYS <= 6000000
                              n >>= 2;
              #endif
  59   1      #if             FREQ_SYS <= 3000000
                              n >>= 2;
              #endif
  62   1      #if             FREQ_SYS <= 750000
                              n >>= 4;
              #endif
  65   1      #endif
  66   1              while ( n ) {  // total = 12~13 Fsys cycles, 1uS @Fsys=12MHz
  67   2                      ++ SAFE_MOD;  // 2 Fsys cycles, for higher Fsys, add operation here
  68   2      #ifdef  FREQ_SYS
  69   2      #if             FREQ_SYS >= 14000000
  70   2                      ++ SAFE_MOD;
  71   2      #endif
  72   2      #if             FREQ_SYS >= 16000000
  73   2                      ++ SAFE_MOD;
  74   2      #endif
  75   2      #if             FREQ_SYS >= 18000000
                              ++ SAFE_MOD;
              #endif
  78   2      #if             FREQ_SYS >= 20000000
                              ++ SAFE_MOD;
              #endif
  81   2      #if             FREQ_SYS >= 22000000
                              ++ SAFE_MOD;
              #endif
  84   2      #if             FREQ_SYS >= 24000000
                              ++ SAFE_MOD;
              #endif
  87   2      #if             FREQ_SYS >= 26000000
                              ++ SAFE_MOD;
              #endif
  90   2      #if             FREQ_SYS >= 28000000
                              ++ SAFE_MOD;
              #endif
  93   2      #if             FREQ_SYS >= 30000000
                              ++ SAFE_MOD;
              #endif
  96   2      #if             FREQ_SYS >= 32000000
                              ++ SAFE_MOD;
              #endif
  99   2      #endif
 100   2                      -- n;
 101   2              }
 102   1      }
 103          
 104          /*******************************************************************************
 105          * Function Name  : mDelayms(UNIT16 n)
 106          * Description    : msÑÓÊ±º¯Êý
 107          * Input          : UNIT16 n
 108          * Output         : None
 109          * Return         : None
 110          *******************************************************************************/
 111          void    mDelaymS( UINT16 n )                                                  // ÒÔmSÎªµ¥Î»ÑÓÊ±
 112          {
 113   1              while ( n ) {
 114   2      #ifdef  DELAY_MS_HW
                              while ( ( TKEY_CTRL & bTKC_IF ) == 0 );
                              while ( TKEY_CTRL & bTKC_IF );
              #else
C51 COMPILER V9.52.0.0   DEBUG                                                             10/14/2017 10:14:20 PAGE 3   

 118   2                      mDelayuS( 1000 );
 119   2      #endif
 120   2                      -- n;
 121   2              }
 122   1      }                                         
 123          
 124          /*******************************************************************************
 125          * Function Name  : CH554UART0Alter()
 126          * Description    : CH554´®¿Ú0Òý½ÅÓ³Éä,´®¿ÚÓ³Éäµ½P0.2ºÍP0.3
 127          * Input          : None
 128          * Output         : None
 129          * Return         : None
 130          *******************************************************************************/
 131          void CH554UART0Alter()
 132          {
 133   1          PIN_FUNC |= bUART0_PIN_X;                                                  //´®¿ÚÓ³Éäµ½P1.2ºÍP1.3
 134   1      }
 135          
 136          /*******************************************************************************
 137          * Function Name  : mInitSTDIO()
 138          * Description    : CH554´®¿Ú0³õÊ¼»¯,Ä¬ÈÏÊ¹ÓÃT1×÷UART0µÄ²¨ÌØÂÊ·¢ÉúÆ÷,Ò²¿ÉÒÔÊ¹ÓÃT2
 139                             ×÷Îª²¨ÌØÂÊ·¢ÉúÆ÷
 140          * Input          : None
 141          * Output         : None
 142          * Return         : None
 143          *******************************************************************************/
 144          void    mInitSTDIO( )
 145          {
 146   1          UINT32 x;
 147   1          UINT8 x2; 
 148   1      
 149   1          SM0 = 0;
 150   1          SM1 = 1;
 151   1          SM2 = 0;                                                                   //´®¿Ú0Ê¹ÓÃÄ£Ê½1
 152   1                                                                                     //Ê¹ÓÃTimer1×÷Îª²¨ÌØÂÊ·¢ÉúÆ
             -÷
 153   1          RCLK = 0;                                                                  //UART0½ÓÊÕÊ±ÖÓ
 154   1          TCLK = 0;                                                                  //UART0·¢ËÍÊ±ÖÓ
 155   1          PCON |= SMOD;
 156   1          x = 10 * FREQ_SYS / UART0_BUAD / 16;                                       //Èç¹û¸ü¸ÄÖ÷Æµ£¬×¢ÒâxµÄÖµ²»
             -ÒªÒç³ö                            
 157   1          x2 = x % 10;
 158   1          x /= 10;
 159   1          if ( x2 >= 5 ) x ++;                                                       //ËÄÉáÎåÈë
 160   1      
 161   1          TMOD = TMOD & ~ bT1_GATE & ~ bT1_CT & ~ MASK_T1_MOD | bT1_M1;              //0X20£¬Timer1×÷Îª8Î»×Ô¶¯ÖØ
             -ÔØ¶¨Ê±Æ÷
 162   1          T2MOD = T2MOD | bTMR_CLK | bT1_CLK;                                        //Timer1Ê±ÖÓÑ¡Ôñ
 163   1          TH1 = 0-x;                                                                 //12MHz¾§Õñ,buad/12ÎªÊµ¼ÊÐè
             -ÉèÖÃ²¨ÌØÂÊ
 164   1          TR1 = 1;                                                                   //Æô¶¯¶¨Ê±Æ÷1
 165   1              TI = 1;
 166   1          REN = 1;                                                                   //´®¿Ú0½ÓÊÕÊ¹ÄÜ
 167   1      }
 168          
 169          /*******************************************************************************
 170          * Function Name  : CH554UART0RcvByte()
 171          * Description    : CH554UART0½ÓÊÕÒ»¸ö×Ö½Ú
 172          * Input          : None
 173          * Output         : None
 174          * Return         : SBUF
 175          *******************************************************************************/
C51 COMPILER V9.52.0.0   DEBUG                                                             10/14/2017 10:14:20 PAGE 4   

 176          UINT8  CH554UART0RcvByte( )
 177          {
 178   1          while(RI == 0);                                                            //²éÑ¯½ÓÊÕ£¬ÖÐ¶Ï·½Ê½¿É²»ÓÃ
 179   1          RI = 0;
 180   1          return SBUF;
 181   1      }
 182          
 183          /*******************************************************************************
 184          * Function Name  : CH554UART0SendByte(UINT8 SendDat)
 185          * Description    : CH554UART0·¢ËÍÒ»¸ö×Ö½Ú
 186          * Input          : UINT8 SendDat£»Òª·¢ËÍµÄÊý¾Ý
 187          * Output         : None
 188          * Return         : None
 189          *******************************************************************************/
 190          void CH554UART0SendByte(UINT8 SendDat)
 191          {
 192   1              SBUF = SendDat;                                                              //²éÑ¯·¢ËÍ£¬ÖÐ¶Ï·½Ê½¿É²»ÓÃÏÂ
             -Ãæ2ÌõÓï¾ä,µ«·¢ËÍÇ°ÐèTI=0
 193   1              while(TI ==0);
 194   1              TI = 0;
 195   1      }
 196          
 197          /*******************************************************************************
 198          * Function Name  : UART1Setup()
 199          * Description    : CH554´®¿Ú1³õÊ¼»¯
 200          * Input          : None
 201          * Output         : None
 202          * Return         : None
 203          *******************************************************************************/
 204          void    UART1Setup( )
 205          {
 206   1         U1SM0 = 0;                                                                   //UART1Ñ¡Ôñ8Î»Êý¾ÝÎ»
 207   1         U1SMOD = 1;                                                                  //¿ìËÙÄ£Ê½
 208   1         U1REN = 1;                                                                   //Ê¹ÄÜ½ÓÊÕ
 209   1              SBAUD1 = 0 - FREQ_SYS/16/UART1_BUAD;
 210   1      }
 211          
 212          /*******************************************************************************
 213          * Function Name  : CH554UART1RcvByte()
 214          * Description    : CH554UART1½ÓÊÕÒ»¸ö×Ö½Ú
 215          * Input          : None
 216          * Output         : None
 217          * Return         : SBUF
 218          *******************************************************************************/
 219          UINT8  CH554UART1RcvByte( )
 220          {
 221   1          while(U1RI == 0);                                                           //²éÑ¯½ÓÊÕ£¬ÖÐ¶Ï·½Ê½¿É²»ÓÃ
 222   1          U1RI = 0;
 223   1          return SBUF1;
 224   1      }
 225          
 226          /*******************************************************************************
 227          * Function Name  : CH554UART1SendByte(UINT8 SendDat)
 228          * Description    : CH554UART1·¢ËÍÒ»¸ö×Ö½Ú
 229          * Input          : UINT8 SendDat£»Òª·¢ËÍµÄÊý¾Ý
 230          * Output         : None
 231          * Return         : None
 232          *******************************************************************************/
 233          void CH554UART1SendByte(UINT8 SendDat)
 234          {
 235   1              SBUF1 = SendDat;                                                             //²éÑ¯·¢ËÍ£¬ÖÐ¶Ï·½Ê½¿É²»ÓÃÏÂ
             -Ãæ2ÌõÓï¾ä,µ«·¢ËÍÇ°ÐèTI=0
C51 COMPILER V9.52.0.0   DEBUG                                                             10/14/2017 10:14:20 PAGE 5   

 236   1              while(U1TI ==0);
 237   1              U1TI = 1;
 238   1      }
 239          
 240          /*******************************************************************************
 241          * Function Name  : CH554WDTModeSelect(UINT8 mode)
 242          * Description    : CH554¿´ÃÅ¹·Ä£Ê½Ñ¡Ôñ
 243          * Input          : UINT8 mode 
 244                             0  timer
 245                             1  watchDog
 246          * Output         : None
 247          * Return         : None
 248          *******************************************************************************/
 249          void CH554WDTModeSelect(UINT8 mode)
 250          {
 251   1         SAFE_MOD = 0x55;
 252   1         SAFE_MOD = 0xaa;                                                             //½øÈë°²È«Ä£Ê½
 253   1         if(mode){
 254   2           GLOBAL_CFG |= bWDOG_EN;                                                    //Æô¶¯¿´ÃÅ¹·¸´Î»
 255   2         }
 256   1         else GLOBAL_CFG &= ~bWDOG_EN;                                                    //Æô¶¯¿´ÃÅ¹·½ö½ö×÷Îª¶¨Ê±Æ÷
 257   1         SAFE_MOD = 0x00;                                                             //ÍË³ö°²È«Ä£Ê½
 258   1         WDOG_COUNT = 0;                                                              //¿´ÃÅ¹·¸³³õÖµ
 259   1      }
 260          
 261          /*******************************************************************************
 262          * Function Name  : CH554WDTFeed(UINT8 tim)
 263          * Description    : CH554¿´ÃÅ¹·¶¨Ê±Ê±¼äÉèÖÃ
 264          * Input          : UINT8 tim ¿´ÃÅ¹·¸´Î»Ê±¼äÉèÖÃ
 265                             00H(6MHz)=2.8s
 266                             80H(6MHz)=1.4s
 267          * Output         : None
 268          * Return         : None
 269          *******************************************************************************/
 270          void CH554WDTFeed(UINT8 tim)
 271          {
 272   1         WDOG_COUNT = tim;                                                             //¿´ÃÅ¹·¼ÆÊýÆ÷¸³Öµ     
 273   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    264    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
