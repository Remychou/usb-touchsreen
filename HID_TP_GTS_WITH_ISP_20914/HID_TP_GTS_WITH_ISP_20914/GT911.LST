C51 COMPILER V9.52.0.0   GT911                                                             10/23/2017 14:51:55 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE GT911
OBJECT MODULE PLACED IN GT911.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE GT911.C LARGE BROWSE DEBUG OBJECTEXTEND PREPRINT

line level    source

   1          /********************************** (C) COPYRIGHT *******************************
   2          * File Name          : GT911.C
   3          * Author             : RZ
   4          * Version            : V1.00
   5          * Date               : 2017-5-15 
   6          * Description        : 电容触摸IC触摸IC驱动
   7          *******************************************************************************/
   8          
   9          #include "GT911.H"
  10          #include "FLASH_IC.H"
  11          #include "IIC.H"
  12          #include "DEBUG.H"
  13          #include "DEVICE.H"
  14          #include <stdio.h>
  15          #include <string.h>
  16          
  17          sbit            GT911_RST_PIN   =               P1^2;
  18          sbit            GT911_INT_PIN   =               P3^2;
  19          
  20          #define         GT911_RST( x )                  ( GT911_RST_PIN = x )
  21          #define         GT911_INT( x )                  ( GT911_INT_PIN = x )
  22          #define         GT911_INT_DAT( )                ( GT911_INT_PIN )
  23          
  24          POINTER         TP[POINTER_NUM] =               { 0 };
  25          _GT911_Info GT911_Info          =               { 0 };
  26          
  27          const UINT16 GT911_TPX_TBL[10]=                 /* 兼容所有系列，10个手指都支持 */
  28          {                       
  29                  GT_TP1_REG,
  30                  GT_TP2_REG,
  31                  GT_TP3_REG,
  32                  GT_TP4_REG,
  33                  GT_TP5_REG,
  34                  GT_TP6_REG,
  35                  GT_TP7_REG, 
  36                  GT_TP8_REG, 
  37                  GT_TP9_REG, 
  38                  GT_TP10_REG
  39          };
  40          
  41          
  42          const UINT8 GT911_CFG_TBL[]=
  43          { 
  44                  0X67,                           /* CFG VERSION */
  45                  0xff,0X00,                      /* X_MAX = 0X01E0 (480) */
  46                  0xff,0x00,                      /* Y_MAX = 0X0320 (800) */
  47                  0X10,                           /* TOUCH_NUM = 5 */
  48                  0X35,                           /* MODULE1 = 0X35 BIT3 CHANGE XY AXIS */
  49                  0x00,0x01,0x08,         /* MODULE2, SHAKE_CNT, FILTER */
  50                  0X28,0X05,0X5A,         /* LARGE_TOUCH, NOISE, TOUCH_LEVER */
  51                  0X3C,0X03,0X10,         /* LEAVE_LEVEL, LPM_CTL, REFRESH_RATE ... */
  52                  
  53          };  
  54          
  55          
C51 COMPILER V9.52.0.0   GT911                                                             10/23/2017 14:51:55 PAGE 2   

  56          /*******************************************************************************
  57          * Function Name  : GT911_WR_Reg
  58          * Description    : 向GT911写入一次数据
  59          * Input          : reg:起始寄存器地址
  60                             buf:数据缓缓存区
  61                             len:写数据长度
  62          * Output         : None
  63          * Return         : 0,成功;1,失败.
  64          *******************************************************************************/
  65          static UINT8 GT911_WR_Reg(UINT16 reg,UINT8 *buf,UINT8 len)
  66          {
  67   1              UINT8 i;
  68   1              UINT8 ret=0;
  69   1              IIC_Start();
  70   1              IIC_Send_Byte(GT_CMD_WR);       //发送写命令     
  71   1              IIC_Wait_Ack();
  72   1              IIC_Send_Byte(reg>>8);          //发送高8位地址
  73   1              IIC_Wait_Ack();
  74   1              IIC_Send_Byte(reg&0XFF);        //发送低8位地址
  75   1              IIC_Wait_Ack();
  76   1              for(i=0;i<len;i++)
  77   1              {
  78   2              IIC_Send_Byte(buf[i]);          //发数据
  79   2                      ret=IIC_Wait_Ack();
  80   2                      if(ret)break;  
  81   2              }
  82   1          IIC_Stop();                                 //产生一个停止条件          
  83   1              return ret; 
  84   1      }
  85          
  86          /*******************************************************************************
  87          * Function Name  : GT911_RD_Reg
  88          * Description    : 从GT911读出一次数据
  89          * Input          : reg:起始寄存器地址
  90                             buf:数据缓缓存区
  91                             len:读数据长度                         
  92          * Output         : None
  93          * Return         : None
  94          *******************************************************************************/
  95          static void GT911_RD_Reg(UINT16 reg,UINT8 *buf,UINT8 len)
  96          {
  97   1              UINT8 i; 
  98   1              IIC_Start();    
  99   1              IIC_Send_Byte(GT_CMD_WR);                                       /* 发送写命令 */
 100   1              IIC_Wait_Ack(); 
 101   1              IIC_Send_Byte(reg>>8);                                                  /* 发送高8位地址 */
 102   1              IIC_Wait_Ack(); 
 103   1              IIC_Send_Byte(reg&0XFF);                                                /* 发送低8位地址 */
 104   1              IIC_Wait_Ack(); 
 105   1              
 106   1              IIC_Start(); 
 107   1              IIC_Send_Byte(GT_CMD_RD);                                       /* 发送读命令 */
 108   1              IIC_Wait_Ack(); 
 109   1              for(i=0;i<len;i++) 
 110   1              {
 111   2              buf[i]=IIC_Read_Byte(i==(len-1)?0:1);           /* 发数据 */
 112   2              } 
 113   1          IIC_Stop();                                                                         /* 产生一个停止条件 */
 114   1      } 
 115          
 116          /*******************************************************************************
 117          * Function Name  : GT911_Config
C51 COMPILER V9.52.0.0   GT911                                                             10/23/2017 14:51:55 PAGE 3   

 118          * Description    : 获取与配置触摸IC配置信息
 119          * Input          : None
 120          * Output         : None
 121          * Return         : None
 122          *******************************************************************************/
 123          UINT8 GT911_Send_Cfg(UINT8 mode)
 124          {
 125   1              UINT8 Cfg_Info[32] = {0};
 126   1              UINT8 buf[2];
 127   1              UINT8 i=0;
 128   1      
 129   1              buf[0]=0;
 130   1              buf[1]=mode;                                                            /*是否写入到GT911 FLASH?  即是否掉电保存 */
 131   1              for( i=0; i < sizeof( GT911_CFG_TBL ); i++ )
 132   1              {
 133   2                      buf[0] += GT911_CFG_TBL[i];                             /* 计算校验和*/
 134   2              }
 135   1          buf[0] = ( ~buf[0] ) + 1;
 136   1              
 137   1              GT911_WR_Reg( GT_CFGS_REG, GT911_CFG_TBL, sizeof(GT911_CFG_TBL) );//发送寄存器配置
 138   1              GT911_WR_Reg( GT_CHECK_REG, buf, 2 );                   /* 写入校验和,和配置更新 */
 139   1      
 140   1      #if DE_PRINTF
                      GT911_RD_Reg( DEF_GTS_CFG_VERSION, Cfg_Info, sizeof(Cfg_Info) );        
              
                      printf("Config Info:\n");
                      for( i = 0; i < sizeof(Cfg_Info); i++ )
                      {
                              printf("%02x\t",(UINT16)Cfg_Info[i]);
                      }
                      printf("\n");
                      
                      buf[0] = 0x00;
                      buf[1] = 0x04;
                      GT911_WR_Reg( 0x8146, buf, 2 );
                      buf[0] = 0x58;
                      buf[1] = 0x02;
                      GT911_WR_Reg( 0x8148, buf, 2 );
                      
                      GT911_RD_Reg( 0x8140, Cfg_Info, sizeof(Cfg_Info) );
                      printf("Coordinate Info\n");
                      for( i = 0; i < sizeof(Cfg_Info); i++ )
                      {
                              printf("%02x\t",(UINT16)Cfg_Info[i]);
                      }
                      printf("\n");   
              #endif
 165   1              return 0;
 166   1      }
 167          
 168          /*******************************************************************************
 169          * Function Name  : GT911_Init
 170          * Description    : 触摸板初始化，获取ID，确认是否工作
 171                                                   SET DEV_ADDRESS        
 172                                             ******** 0X14 0X28/0X29 *************
 173                                             * RST  ________――――――
 174                                             * INT  ____――――――――――
 175                                             ******** 0X5D 0XBA/0XBB *************
 176                                             *  RST  ________――――――
 177                                             *  INT  ______________
 178                                             *********************************
 179          * Input          : None
C51 COMPILER V9.52.0.0   GT911                                                             10/23/2017 14:51:55 PAGE 4   

 180          * Output         : None
 181          * Return         : IC VERSION
 182          *******************************************************************************/
 183          UINT8 GT911_Init(void)
 184          {
 185   1      
 186   1              /* SET ADDRESS 0x28/0x29*/
 187   1      #if (DEF_TP_DEV_ADDR == 0X14)   
 188   1              GT911_RST(0);
 189   1              GT911_INT(0);
 190   1              mDelayuS(10);
 191   1              GT911_INT(1);
 192   1              mDelayuS(100);
 193   1              GT911_RST(1);
 194   1      #elif (DEF_TP_DEV_ADDR == 0X5D) 
                      GT911_RST(0);
                      GT911_INT(0);
                      mDelayuS(100);
                      GT911_RST(1);
              #endif  
 200   1              mDelaymS(5);
 201   1              /* INT 浮空输入 */
 202   1              P3_MOD_OC &= ~BIT2;                                                                                                             /* P3^2 浮空输入 */
 203   1              P3_DIR_PU &= ~BIT2;
 204   1              I2c_Init();
 205   1              /* Config system infomation */  
 206   1      //      GT911_Send_Cfg(1);
 207   1              
 208   1              Get_Config_Info();
 209   1              GT911_Info.X_Resolution = 2048 /(double)GT911_Info.x_max_pos;
 210   1              GT911_Info.Y_Resolution = 2048 /(double)GT911_Info.y_max_pos;   
 211   1      #if DE_PRINTF   
                      printf("%f\t%f\n",GT911_Info.X_Resolution,GT911_Info.Y_Resolution);
              #endif  
 214   1              return 1;
 215   1      }
 216          
 217          /*******************************************************************************
 218          * Function Name  : GT911_Touch_Check
 219          * Description    : 按键检测与上传
 220          * Input          : None
 221          * Output         : None
 222          * Return         : None
 223          *******************************************************************************/
 224          UINT8 GT911_Touch_Check( void )
 225          {
 226   1              
 227   1              if( GT911_Info.IRQ_Flag == 1 )
 228   1              {
 229   2                      if( GT911_Scan() == 1 )
 230   2                      {
 231   3                              if(( TP[0].X_pos != 0 )||( TP[0].Y_pos != 0 ) )
 232   3                              {
 233   4                                      Absolute_Up_Pack( &TP, GT911_Info.Point_Num );
 234   4                              }
 235   3                      }
 236   2                      
 237   2                      GT911_Info.IRQ_Flag = 0;                
 238   2                      EX0 = 1;
 239   2              
 240   2              }
 241   1              return 0;
C51 COMPILER V9.52.0.0   GT911                                                             10/23/2017 14:51:55 PAGE 5   

 242   1      }
 243          
 244          
 245                  
 246          /*******************************************************************************
 247          * Function Name  : GT911_Scan
 248          * Description    : 扫描触摸屏(采用查询方式)
 249          * Input          : None
 250          * Output         : None
 251          * Return         : 0,触屏无触摸;1,触屏有触摸
 252          *******************************************************************************/
 253          UINT8 GT911_Scan( void )
 254          {
 255   1              UINT8 buf[5];
 256   1              UINT8 mode;
 257   1      
 258   1              UINT8 i;
 259   1              UINT8 temp;
 260   1              
 261   1              INT1 = 0;               
 262   1              GT911_RD_Reg(GT_GSTID_REG,&mode,1);                                                             //读取触摸点的状态 
 263   1              
 264   1              if( ( mode & BIT7 ) == 0 )
 265   1              {
 266   2                      temp = 0;       
 267   2                      GT911_WR_Reg(GT_GSTID_REG,&temp,1);                                                     //清标志,如果延迟较长可以去掉                   
 268   2                      return 0;
 269   2              }
 270   1      
 271   1              GT911_Info.Point_Num =  mode&0x0F;
 272   1      
 273   1              for( i = 0; i < POINTER_NUM; i++ )
 274   1              {
 275   2                      GT911_RD_Reg( GT911_TPX_TBL[i], buf, 5 );
 276   2                      
 277   2      //              printf("ID[%d]:%d\t",(UINT16)i,(UINT16)buf[0]);
 278   2                      if( i == 0 )
 279   2                      {
 280   3                              TP[i].Tip_Switch = GT911_Info.Point_Num ? 1 : 0;
 281   3                      }
 282   2                      else
 283   2                      {
 284   3                              TP[i].Tip_Switch = ( buf[0] ? 1 : 0 );
 285   3                      }
 286   2                      
 287   2                      if( TP[i].Tip_Switch == 0 )
 288   2                      {
 289   3                              continue;
 290   3                      }
 291   2                      
 292   2                      TP[i].Contact_Identifier = buf[0];
 293   2                      
 294   2                      if( ( TP[i].Tip_Switch == 1 ) || (i == 0) )
 295   2                      {
 296   3                              if( GT911_Info.x_y_swap == 1 )
 297   3                              {
 298   4                                      TP[i].Y_pos = ( ((UINT16)buf[2]<<8)+buf[1] ) * GT911_Info.X_Resolution;
 299   4                                      TP[i].X_pos = ( ((UINT16)buf[4]<<8)+buf[3] ) * GT911_Info.Y_Resolution;
 300   4                              }
 301   3                              else
 302   3                              {
 303   4                                      TP[i].X_pos = ( ((UINT16)buf[2]<<8)+buf[1] ) * GT911_Info.X_Resolution;
C51 COMPILER V9.52.0.0   GT911                                                             10/23/2017 14:51:55 PAGE 6   

 304   4                                      TP[i].Y_pos = ( ((UINT16)buf[4]<<8)+buf[3] ) * GT911_Info.Y_Resolution;                                 
 305   4      //                              TP[i].X_pos = ( ((UINT16)buf[2]<<8)+buf[1] );
 306   4      //                              TP[i].Y_pos = ( ((UINT16)buf[4]<<8)+buf[3] );           
 307   4                              }
 308   3                              TP[i].Resolution_Multi = 0x0030;
 309   3                              
 310   3                              if ( GT911_Info.x_mirror == 1 )
 311   3                              {
 312   4                                      TP[i].X_pos = 2048 - TP[i].X_pos;
 313   4                              }
 314   3                              
 315   3                              if ( GT911_Info.y_mirror == 1 )
 316   3                              {
 317   4                                      TP[i].Y_pos = 2048 - TP[i].Y_pos;
 318   4                              }
 319   3                      }
 320   2                      else 
 321   2                      {
 322   3                              TP[i].X_pos = 0;
 323   3                              TP[i].Y_pos = 0;
 324   3                              TP[i].Resolution_Multi = 0;
 325   3                      }
 326   2      #if DE_PRINTF   
                      printf("sw:%d\tid%d\t%d\t%d\n",(UINT16)TP[i].Tip_Switch,(UINT16)TP[i].Contact_Identifier,TP[i].X_pos,TP[i
             -].Y_pos);
              #endif
 329   2              }
 330   1      #if DE_PRINTF   
                      printf("num:%d\n",(UINT16)GT911_Info.Point_Num);
              #endif
 333   1              temp = 0;
 334   1              GT911_WR_Reg(GT_GSTID_REG,&temp,1);                                                     //清标志                
 335   1              
 336   1              INT1 = 1;               
 337   1              return 1;
 338   1      }
 339          
 340          /*******************************************************************************
 341          * Function Name  : GT911_ISR
 342          * Description    : 外部中断0
 343          * Input          : None
 344          * Output         : None
 345          * Return         : None
 346          *******************************************************************************/
 347          void    GT911_ISR( void ) interrupt INT_NO_INT0 using 1                    //USB中断服务程序,使用寄存器组1
 348          {
 349   1              EX0 = 0;
 350   1              GT911_Info.IRQ_Flag = 1;
 351   1      }
 352          
 353          /* END OF FILE */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1275    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =     61      58
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.52.0.0   GT911                                                             10/23/2017 14:51:55 PAGE 7   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
